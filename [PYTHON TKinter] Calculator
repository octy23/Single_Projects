import tkinter as tk


def button_click(value):
    current = entry.get()
    entry.delete(0, tk.END)
    entry.insert(tk.END, current + str(value))


def clear_entry():
    entry.delete(0, tk.END)


def backspace():
    current = entry.get()
    entry.delete(0, tk.END)
    entry.insert(tk.END, current[:-1])


def evaluate():
    try:
        expression = entry.get()
        result = eval(expression)
        entry.delete(0, tk.END)
        entry.insert(tk.END, str(result))
    except Exception as e:
        entry.delete(0, tk.END)
        entry.insert(tk.END, "ERROR")


main = tk.Tk()
main.title("Calculator")
main.iconbitmap("CalculatorIcon.ico")

width = 500
height = 700
screenwidth = main.winfo_screenwidth()
screenheight = main.winfo_screenheight()
center_x = int(screenwidth / 2 - width / 2)
center_y = int(screenheight / 2 - height / 2)

main.geometry(f"500x700+{center_x}+{center_y}")
main.resizable(False, False)
main.config(bg="#171717")

entry = tk.Entry(main, width=25, font=('Arial', 20, 'bold'), justify=tk.RIGHT)
entry.grid(row=0, column=0, columnspan=4, padx=10, pady=15, ipady=15)

# Buttons
buttons = [
    '7', '8', '9', '/',
    '4', '5', '6', '*',
    '1', '2', '3', '-',
    '0', '.', '=', '+'
]

row_val = 1
col_val = 0

for button in buttons:
    tk.Button(
        main, text=button, padx=30, pady=25, font=('Arial', 20, 'bold'),
        command=lambda b=button: button_click(b) if b != '=' else evaluate(),
        bg="#8f0200",
        fg="#141414"
    ).grid(row=row_val, column=col_val, padx=5, pady=5)
    col_val += 1
    if col_val > 3:
        col_val = 0
        row_val += 1

tk.Button(
    main, text='C', padx=30, pady=20, font=('Arial', 20),
    command=clear_entry, bg="#a60000", fg="#141414"
).grid(row=row_val, column=0, padx=15, pady=15, sticky="nsew")
tk.Button(
    main, text='âŒ«', padx=20, pady=20, font=('Arial', 20),
    command=backspace, bg="#a60000", fg="#141414"
).grid(row=row_val, column=3, padx=15, pady=15, sticky="nsew")

for i in range(1, 5):
    main.grid_rowconfigure(i, weight=1)
    main.grid_columnconfigure(i, weight=1)

# Main loop
main.mainloop()
